import com.github.rahulsom.waena.WaenaExtension

plugins {
    id("java")
    id("groovy")
    id("application")
    alias(libs.plugins.waena.root)
    alias(libs.plugins.waena.published)
    alias(libs.plugins.shadow)
}

apply from: 'gradle/codegen.gradle'

group = 'com.github.rahulsom'
description = "Meaningful Use Validator based on NIST's own."

application {
    mainClass.set("gov.nist.mu.validation.Validator")
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            srcDir 'nist/generated/src/java'
        }
        resources {
            srcDir 'src/main/resources'
            srcDir 'build/generated/resources/cachefileDir'
            srcDir 'build/generated/resources/stylesheetDir'
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compileOnly(libs.lombok)
    annotationProcessor(libs.lombok)

    implementation(libs.commons.cli)
    implementation(libs.commons.lang)
    implementation(libs.jsr173.api)
    implementation(libs.xml.commons.resolver)
    implementation(libs.bundles.jaxb)

    implementation(libs.saxon)
    implementation(variantOf(libs.saxon) { classifier("dom") })
    implementation(variantOf(libs.saxon) { classifier("dom4j") })
    implementation(variantOf(libs.saxon) { classifier("jdom") })
    implementation(variantOf(libs.saxon) { classifier("s9api") })
    implementation(variantOf(libs.saxon) { classifier("xom") })
    implementation(variantOf(libs.saxon) { classifier("xqj") })
    implementation(variantOf(libs.saxon) { classifier("sql") })
    implementation(libs.xmlbeans) {
        exclude group: 'net.sf.saxon'
    }

    testImplementation(libs.spock.core)
    testImplementation(libs.activation)

    testImplementation(libs.junit.jupiter.api)
    testRuntimeOnly(libs.bundles.junit.runtime)
}

test {
    useJUnitPlatform()
}

contacts {
    validateEmails = true
    'rahulsom@noreply.github.com' {
        moniker("Rahul Somasunderam")
        roles("owner")
        github("https://github.com/rahulsom")
    }
}

waena {
     publishMode.set(WaenaExtension.PublishMode.Central)
}